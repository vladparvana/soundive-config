server:
  port: 8080

spring:
  application:
    name: gateway-service
  
  redis:
    host: localhost
    port: 6379
  cloud:
    gateway:
      routes:

        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/auth/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                key-resolver: "#{@ipKeyResolver}"
            - name: CircuitBreaker
              args:
                name: authCircuitBreaker
                fallbackUri: forward:/fallback/auth

        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/users/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
                key-resolver: "#{@ipKeyResolver}"
            - name: CircuitBreaker
              args:
                name: userCircuitBreaker
                fallbackUri: forward:/fallback/user

eureka:
  instance:
    hostname: localhost
    instance-id: ${spring.application.name}:${random.uuid}
    prefer-ip-address: false
    status-page-url-path: /actuator/health
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URI:http://localhost:8761/eureka/}

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

jwt:
  secret: ${JWT_SECRET:M0c1suuRkDAJx2qLWuAfQre3tXyzopQ8 }